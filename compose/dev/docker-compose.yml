services:
  app:
    build: ../../app/.
    container_name: monitoring-app
    restart: always
    command: fastapi dev /app/src/app.py --port 80 --host 0.0.0.0
    ports:
      - 80:80
      # - 5678:5678
    volumes:
      - /home/taufik/project-shared/api-monitoring-psre-v2/app/src:/app/src
      - /home/taufik/project-shared/api-monitoring-psre-v2/data:/app/data
      - /home/taufik/project-shared/api-monitoring-psre-v2/input:/app/input
      - /home/taufik/project-shared/api-monitoring-psre-v2/temp:/app/tmp
      - /home/taufik/project-shared/api-monitoring-psre-v2/logs:/app/logs:rw
    environment:
      NODE_NAME: ${NODE_NAME}.API
      TZ: ${TZ}
      CELERY_TIMEZONE: ${TZ}
      CELERY_ENABLE_UTC: False
      INFLUX_BUCKET: ${INFLUX_BUCKET}
      INFLUX_URL: ${INFLUX_URL}
      INFLUX_ORG: ${INFLUX_ORG}
      INFLUX_TOKEN: ${INFLUX_TOKEN}
      TIME_INTERVAL: ${TIME_INTERVAL}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID} 
      SEND_NOTIF: ${SEND_NOTIF} 
    depends_on:
      - mongo
      - influxdb
      - redis

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    environment:
      TZ: ${TZ}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  influxdb:
    image: influxdb:2.0
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    volumes:
      - influxdata:/var/lib/influxdb2
      - influxconfig:/etc/influxdb2
    environment:
      TZ: ${TZ}
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${DOCKER_INFLUXDB_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${DOCKER_INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUX_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUX_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUX_TOKEN}

  celery_worker1:
    container_name: ${NODE_NAME}.WORKER.1
    restart: always
    build: ../../app/.
    command: celery -A src.celery worker -n ${NODE_NAME}.WORKER.1 --concurrency=3 --pool=prefork --loglevel=${WORKER_LOG_LEVEL}
    volumes:
      - /home/taufik/project-shared/api-monitoring-psre-v2/app/src:/app/src
    environment:
      NODE_NAME: ${NODE_NAME}.WORKER.1
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID} 
      INFLUX_BUCKET: ${INFLUX_BUCKET}
      INFLUX_URL: ${INFLUX_URL}
      INFLUX_ORG: ${INFLUX_ORG}
      INFLUX_TOKEN: ${INFLUX_TOKEN}
      SEND_NOTIF: ${SEND_NOTIF}
    depends_on:
      - redis
      - influxdb
      - app

  celery_worker2:
    container_name: ${NODE_NAME}.WORKER.2
    restart: always
    build: ../../app/.
    command: celery -A src.celery worker -n ${NODE_NAME}.WORKER.2 --concurrency=3 --pool=prefork --loglevel=${WORKER_LOG_LEVEL}
    volumes:
      - /home/taufik/project-shared/api-monitoring-psre-v2/app/src:/app/src
    environment:
      NODE_NAME: ${NODE_NAME}.WORKER.2
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID} 
      INFLUX_BUCKET: ${INFLUX_BUCKET}
      INFLUX_URL: ${INFLUX_URL}
      INFLUX_ORG: ${INFLUX_ORG}
      INFLUX_TOKEN: ${INFLUX_TOKEN}
      SEND_NOTIF: ${SEND_NOTIF}
    depends_on:
      - redis
      - influxdb
      - app

  flower:
    container_name: flower
    restart: always
    build: ../../app/.
    command: celery -A src.celery flower --broker=redis://${REDIS_URL}:{REDIS_PORT}/0 --port=5555
    environment:
      TZ: "Asia/Jakarta"
    ports:
      - 5556:5555
    depends_on:
      - app
      - redis
      - celery_worker1
      - celery_worker2


  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      TZ: "Asia/Jakarta"
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_URL}:${MONGO_PORT}/

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - influxdb
      - app
    volumes:
      - grafana:/var/lib/grafana

volumes:
  mongodb:
  mongoconfig:
  grafana:
  influxdata:
  influxconfig:
